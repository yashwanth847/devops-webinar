global:
  authHost: default
  clusterId: "99"
  deployRegion: use1
  deploymentSize: Small
  envCode: dev
  envId: "01"
  gatewayURL: default
  hcaId: "71"
  hcaService: default
  instanceId: "01"
  k8sRepo: gcr.io/gcp-keng01/
  nodepoolLabel: "multi-app1"
  projectCode: keng
  replicas: 3
  stackId: "03"
  terminationGracePeriodSeconds: 30
  
backend:
  image:
    prefix: hca-backend-tomcat
    suffix: develop-k8s
    tag: 7
    pullPolicy: Always
  containerPorts:
    port-3:
      port: 9002
      protocol: TCP
      disabled: false
    port-4:
      port: 8080
      protocol: TCP
      disabled: false
    port-5:
      port: 8787
      protocol: TCP
      disabled: false
    port-6:
      port: 7070
      protocol: TCP
      disabled: false
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  resources:
    limits:
      mem:
        _default: "10Gi"
        Small: "15Gi"
        Medium: "40Gi"
        Large: "50Gi"
        Extra_Large: "60Gi"
      cpu:
        _default: "3000m"
        Small: "4000m"
        Medium: "8000m"
        Large: "10000m"
        Extra_Large: "15000m"
    requests:
      mem:
        _default: "8Gi"
        Small: "12Gi"
        Medium: "34Gi"
        Large: "45Gi"
        Extra_Large: "50Gi"
      cpu:
        _default: "2000m"
        Small: "3000m"
        Medium: "6000m"
        Large: "8000m"
        Extra_Large: "10000m"

frontend:
  image:
    prefix: hca-frontend-nginx
    suffix: develop-k8s
    tag: 7
    pullPolicy: Always
  containerPorts:
    http:
      port: 80
      protocol: TCP
      disabled: false
    https:
      port: 443
      protocol: TCP
      disabled: false
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  resources:
    limits:
      mem:
        _default: "568Mi"
        Small: "668Mi"
        Medium: "768Mi"
        Large: "868Mi"
        Extra_Large: "968Mi"
      cpu:
        _default: "100m"
        Small: "200m"
        Medium: "300m"
        Large: "400m"
        Extra_Large: "500m"     
    requests:
      mem:
        _default: "128Mi"
        Small: "228Mi"
        Medium: "328Mi"
        Large: "428Mi"
        Extra_Large: "528Mi"
      cpu:
        _default: "30m"
        Small: "40m"
        Medium: "50m"
        Large: "60m"
        Extra_Large: "70m" 
        
nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 80
  requestPath: "/hcaservice/restcall/v1/platform/healthCheck"
  annotations: {}
    #cloud.google.com/neg: '{"ingress": true}'

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: "gce-internal"
  hosts:
    - host: hcafqdn.kronos.local
      paths:
        - path: /

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

redis:
  clusterName: 'default'
  url: 'default'
  port: 'default'
  master: 'default'
  sentinelNodes: 'default'

db:
  user: 'default'
  password: 'default'
  name: 'default'
  serverName: 'default'
  port: 5444
  patchDir: 'default'
  commonDir: 'default'
  sqlCommand: 'default'

openam:
  user: 'default'
  password: 'default'
  keypass: 'default'

rabbitmq:
  host: 'default'
  vhost: 'default'
  envHost: 'default'
  envVhost: 'default'
  user: 'default'
  password: 'default'
  creds: 'default'
  userPassword: 'default'
  envUser: 'default'
  envPassword: 'default'

analytic:
  user: 'default'
  password: 'default'
  nodeName: 'default'
  clusterName: 'default'

ppas:
  edbUserPassword: 'default'

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPU: 70
  targetMemory: 90

  ## add only if default behavior is to be changed
  ## behavior can only be changed if version is >= v1.18
  ## enable only if you have compatible K8s version.
  #behavior:
  #  scaleDown:
  #    stabilizationWindowSeconds: 300
  #    selectPolicy: Min
  #    policies:
  #        - type: Percent
  #          value: 50
  #          periodSeconds: 60
  #  scaleUp:
  #    stabilizationWindowSeconds: 300
  #    selectPolicy: Max
  #    policies:
  #      - type: Percent
  #        value: 50
  #        periodSeconds: 60

pdb:
  enabled: true
  # You can specify only one of maxUnavailable and minAvailable in a single PodDisruptionBudget 
  # https://kubernetes.io/docs/tasks/run-application/configure-pdb/#specifying-a-poddisruptionbudget
  minAvailable: 1
  #maxUnavailable: 2
